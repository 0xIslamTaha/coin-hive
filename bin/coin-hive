#!/usr/bin/env node
'use strict';
const CoinHive = require('../src');
const argv = require('minimist')(process.argv.slice(2));
const defaults = require('../config/defaults');

if (argv.help || argv.h) {
  require('fs').createReadStream(`${__dirname}/help`).pipe(process.stdout);
  return;
}

(async () => {

  const siteKey = argv._[0] || process.env.COINHIVE_SITE_KEY;

  if (!siteKey) {
    throw new Error('No site key found, please set environment "SITE_KEY" or give an argument to the binary');
  }

  console.log('Initializing...');

  const interval = argv.interval || defaults.INTERVAL || process.env.COINHIVE_INTERVAL;
  const port = argv.port || defaults.PORT || process.env.COINHIVE_PORT;
  const host = argv.host|| defaults.HOST || process.env.COINHIVE_HOST;

  const miner = await CoinHive({siteKey, interval, port, host});
  await miner.start();

  console.log('Initialized!\n');
  console.log('Site Key:', siteKey);
  console.log('Interval:', interval);
  console.log('Port:', port);
  console.log('Host:', host, '\n');

  miner.on('found', () => console.log('Found!'))
  miner.on('accepted', () => console.log('Accepted!'))
  miner.on('update', (data) => console.log(`
Hashes per second: ${data.hashesPerSecond}
Total hashes: ${data.totalHashes}
Accepted hashes: ${data.acceptedHashes}
  `));
})()
