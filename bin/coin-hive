#!/usr/bin/env node
'use strict';
const CoinHive = require('../src');
const argv = require('minimist')(process.argv.slice(2));
const defaults = require('../config/defaults');

function help() {
  const text = require('fs').createReadStream(`${__dirname}/help`)
  text.pipe(process.stderr);
  text.on('close', () => process.exit(1));
}

if (argv.help || argv.h) {
  help();
  return;
}

(async () => {

  const siteKey = argv._[0] || process.env.COINHIVE_SITE_KEY;

  if (!siteKey) {
    console.error('No site key found, please set environment "SITE_KEY" or give an argument to the binary');
    help();
    return;
  }

  console.log('Initializing...');

	const options = {
    interval: argv.interval || process.env.COINHIVE_INTERVAL || defaults.interval ,
    port: argv.port || process.env.COINHIVE_PORT || defaults.port,
    host: argv.host || process.env.COINHIVE_HOST || defaults.host ,
    threads: argv.threads || process.env.COINHIVE_THREADS || defaults.threads
  }

  const miner = await CoinHive(siteKey, options);
  await miner.start();

  console.log('Initialized!\n');
  console.log('Site Key:', options.siteKey);
  console.log('Interval:', options.interval);
  console.log('Port:', options.port);
  console.log('Host:', options.host);
  console.log('Threads:', options.threads === -1 ? 'Automatic' : options.threads, '\n');

  miner.on('found', () => console.log('Found!'))
  miner.on('accepted', () => console.log('Accepted!'))
  miner.on('update', (data) => console.log(`
Hashes per second: ${data.hashesPerSecond}
Total hashes: ${data.totalHashes}
Accepted hashes: ${data.acceptedHashes}
  `));
})()

process.on('unhandledRejection', function(e) {
  console.error('An error occured', e.message)
  process.exit(1)
})
